multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 5,set_lim = c(315,900))
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 1, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 2, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 3, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 4, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 5, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 1,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 2,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 3,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 5,
multipl_fact=1, set_lim=c(0,5))
multiplot <- function (models,var_name,clab_text,i_site,set_lim,offset,multipl_fact){
if(missing(offset)) {
offset<-0
}
if(missing(multipl_fact)) {
multipl_fact<-1
}
# === Loading data ===
for (i_mod in 1:9){
file_name_col <- paste('RetMIP_',models[i_mod],'_',sites[i_site],'_3hourly_columns.nc',sep = "")
# print(file_name_col)
path_file_col<-paste(path_model,models[i_mod],'/',file_name_col,sep = "")
# loading column data
file_nc_col<- nc_open(path_file_col)
var_mod <- ncvar_get(file_nc_col, varid=var_name)
var_mod <- var_mod + offset
var_mod <- var_mod *multipl_fact
if (i_mod == 6)
{var_mod <- var_mod[!is.na(var_mod[,1]),]}
# if (i_mod == 5 & var_name == "temp")
# {var_mod <- var_mod +273}
if (i_mod == 5 & var_name == "lwc")
{ var_mod<- pmax(var_mod,0)}
# {var_mod <- var_mod +273}
if (i_mod %in% 1:3 & var_name == "lwc")
{ var_mod<- var_mod*1000}
if (dim(var_mod)[1]>dim(var_mod)[2]) var_mod <- t(var_mod)
time1<-1:dim(var_mod)[2]
date_mod<-seq(lubridate::dmy_hms(start_time[i_site]),
lubridate::dmy_hms(end_time[i_site]),
3600*3)
if (length(date_mod)<length(time1)) {
var_mod<-var_mod[,- (1:(length(time1)-length(date_mod)))]
time1  <- time1[- (1:(length(time1)-length(date_mod)))]}
if (length(date_mod)>length(time1)) {
print(length(date_mod))
print(length(time1))
# print(date_mod[length(date_mod)])
time <- ncvar_get(file_nc_col, varid='time')
time<- time*3600*24 + as.POSIXct("1900-01-01")
# print(time[1])
# print(length(time))
# print(time[length(time)])
}
while (length(date_mod)>length(time1)) {
time1 <- append(time1, time1[length(time1)]+3600*3)
var_mod <- cbind(var_mod, var_mod[,length(time1)-1])}
# some filtering
# var_mod<-var_mod[apply(var_mod, 1, Compose(is.finite, all)),]
# rearranging in xyz array
ind_select<-seq(1,dim(var_mod)[2],max(1,floor(dim(var_mod)[2]/1000)))
time_select <- date_mod[ind_select]
var_mod<-var_mod[,ind_select]
var_mod_save<-var_mod
var_mod<-melt(var_mod)
df <- if (i_mod==1) {data.frame(var_mod)} else {cbind(df,var_mod$value)}
colnames(df)[2+i_mod] <- paste("val",toString(i_mod),sep = "")
}
df$X1<--df$X1
df$date <- time_select[df$X2]
print("Data loaded")
# === plotting ===
print("Plotting...")
pList <- lapply(1:length(models), function(i_mod){
p <- ggplot(data = df,
aes_string(x = "date", y = "X1", fill = paste("val",i_mod,sep=""))) +
geom_tile()+
scale_y_continuous(breaks=c(0,-50,-100,-150,-200),
labels=c("0", "5", "10","15","20"),
expand=c(0.02,0.01),
limits=if (var_name == "lwc") {c(-70, 0 )} else {c(-200,0)})+
scale_x_datetime(expand=c(0.02,0.01))+
scale_fill_gradientn(name=clab_text,
colours = if (var_name == "rho") {brewer.pal(length(models),"YlGnBu")}
else if (var_name == "temp")
{rev(brewer.pal(length(models),"RdBu"))}
else if (var_name == "lwc") {brewer.pal(length(models),"PuBu")},
limits = set_lim)+
annotate('text', x = df$date[floor(length(df$date)/2)],
y = if (var_name == "lwc") {-55} else {-180},
label = models[i_mod],fontface=2)+
theme(legend.position = if (i_mod==3) {c(1.05,0.9)} else {"none"},
legend.justification = c(0,1),
plot.margin=margin(0,10,10,0),
axis.title.x = element_blank(),
axis.text.x = if (i_mod %in% 7:9) {element_text(angle=90)} else {element_blank()},
axis.title.y = element_blank(),
axis.text.y = if (i_mod %in% c(1,4,7)) {element_text()} else {element_blank()},
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
})
p_final <- grid.arrange(grobs=pList, nrow=3,
top=sites[[i_site]],
left="Depth (m)",
bottom="Date",
right=" ",
vp=viewport(x=0, just="left", width=0.8, height=1),
heights=unit(c(3.2,3.2,3.9), c("cm","cm", "cm")))
print("Saving...")
ggsave(filename=paste0("Plots/",sites[[i_site]],"_",var_name,"_2D.jpg"),plot=p_final,device = "jpeg")
}
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 1,
multipl_fact=1, set_lim=c(0,5))
multiplot <- function (models,var_name,clab_text,i_site,set_lim,offset,multipl_fact){
if(missing(offset)) {
offset<-0
}
if(missing(multipl_fact)) {
multipl_fact<-1
}
# === Loading data ===
for (i_mod in 1:9){
file_name_col <- paste('RetMIP_',models[i_mod],'_',sites[i_site],'_3hourly_columns.nc',sep = "")
# print(file_name_col)
path_file_col<-paste(path_model,models[i_mod],'/',file_name_col,sep = "")
# loading column data
file_nc_col<- nc_open(path_file_col)
var_mod <- ncvar_get(file_nc_col, varid=var_name)
var_mod <- var_mod + offset
var_mod <- var_mod *multipl_fact
if (i_mod == 6)
{var_mod <- var_mod[!is.na(var_mod[,1]),]}
# if (i_mod == 5 & var_name == "temp")
# {var_mod <- var_mod +273}
if (i_mod == 5 & var_name == "lwc")
{ var_mod<- pmax(var_mod,0)}
# {var_mod <- var_mod +273}
if (i_mod %in% 1:3 & var_name == "lwc")
{ var_mod<- var_mod*1000}
if (dim(var_mod)[1]>dim(var_mod)[2]) var_mod <- t(var_mod)
time1<-1:dim(var_mod)[2]
date_mod<-seq(lubridate::dmy_hms(start_time[i_site]),
lubridate::dmy_hms(end_time[i_site]),
3600*3)
if (length(date_mod)<length(time1)) {
var_mod<-var_mod[,- (1:(length(time1)-length(date_mod)))]
time1  <- time1[- (1:(length(time1)-length(date_mod)))]}
if (length(date_mod)>length(time1)) {
print(length(date_mod))
print(length(time1))
# print(date_mod[length(date_mod)])
time <- ncvar_get(file_nc_col, varid='time')
time<- time*3600*24 + as.POSIXct("1900-01-01")
# print(time[1])
# print(length(time))
# print(time[length(time)])
}
while (length(date_mod)>length(time1)) {
time1 <- append(time1, time1[length(time1)]+3600*3)
var_mod <- cbind(var_mod, var_mod[,length(time1)-1])}
# some filtering
# var_mod<-var_mod[apply(var_mod, 1, Compose(is.finite, all)),]
# rearranging in xyz array
ind_select<-seq(1,dim(var_mod)[2],max(1,floor(dim(var_mod)[2]/1000)))
time_select <- date_mod[ind_select]
var_mod<-var_mod[,ind_select]
var_mod_save<-var_mod
var_mod<-melt(var_mod)
df <- if (i_mod==1) {data.frame(var_mod)} else {cbind(df,var_mod$value)}
colnames(df)[2+i_mod] <- paste("val",toString(i_mod),sep = "")
}
df$X1<--df$X1
df$date <- time_select[df$X2]
print("Data loaded")
# === plotting ===
print("Plotting...")
pList <- lapply(1:length(models), function(i_mod){
p <- ggplot(data = df,
aes_string(x = "date", y = "X1", fill = paste("val",i_mod,sep=""))) +
geom_tile()+
scale_y_continuous(breaks=c(0,-50,-100,-150,-200),
labels=c("0", "5", "10","15","20"),
expand=c(0.02,0.01),
limits=if (var_name == "lwc") {c(-70, 0 )} else {c(-200,0)})+
scale_x_datetime(expand=c(0.02,0.01))+
scale_fill_gradientn(name=clab_text,
colours = if (var_name == "rho") {brewer.pal(length(models),"YlGnBu")}
else if (var_name == "temp")
{rev(brewer.pal(length(models),"RdBu"))}
else if (var_name == "lwc") {brewer.pal(length(models),"PuBu")},
limits = set_lim)+
annotate('text', x = df$date[floor(length(df$date)/2)],
y = if (var_name == "lwc") {-55} else {-180},
label = models[i_mod],fontface=2)+
theme(legend.position = if (i_mod==3) {c(1.05,0.9)} else {"none"},
legend.justification = c(0,1),
plot.margin=margin(0,10,10,0),
axis.title.x = element_blank(),
axis.text.x = if (i_mod %in% 7:9) {element_text(angle=90)} else {element_blank()},
axis.title.y = element_blank(),
axis.text.y = if (i_mod %in% c(1,4,7)) {element_text()} else {element_blank()},
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
})
p_final <- grid.arrange(grobs=pList, nrow=3,
top=sites[[i_site]],
left="Depth (m)",
bottom="Date",
right=" ",
vp=viewport(x=0, just="left", width=0.8, height=1),
heights=unit(c(3.2,3.2,3.9), c("cm","cm", "cm")))
print("Saving...")
ggsave(filename=paste0("Plots/",sites[[i_site]],"_",var_name,"_2D.jpg"),plot=p_final,device = "jpeg")
}
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 1,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 5,
multipl_fact=1, set_lim=c(0,5))
savehistory("C:/Users/bav/Desktop/history.txt")
knitr::opts_chunk$set(echo = TRUE)
library(ncdf4)
library(ggplot2)
library(reshape)
library(functional)
library(pracma)
library(dplyr)
library(lubridate)
library(gridExtra)
library(grid)
library(viridis)
library(RColorBrewer)
path_model<-'C:/Users/bav/OneDrive - Geological survey of Denmark and Greenland/Data/RetMIP/Model outputs/'
sites<-list('KANU','Dye-2_long','Dye-2_16','Summit','FA')
models <- list('CFM-Cr','CFM-KM','DTU','DMIHH','GEUS','IMAUFDM','MeyerHewitt','UppsalaUniBucket','UppsalaUniDeepPerc')
start_time <- c("01-May-2012 00:00:00","01-Jun-1998 00:00:00","02-May-2016 00:00:00","02-Jul-2000 00:00:00","12-Apr-2014 00:00:00")
end_time <- c("31-Dec-2016 06:00:00","02-May-2015 15:00:00","28-Oct-2016 09:00:00","08-Mar-2015 12:00:00","02-Dec-2014 21:00:00")
multiplot <- function (models,var_name,clab_text,i_site,set_lim,offset,multipl_fact){
if(missing(offset)) {
offset<-0
}
if(missing(multipl_fact)) {
multipl_fact<-1
}
# === Loading data ===
for (i_mod in 1:9){
file_name_col <- paste('RetMIP_',models[i_mod],'_',sites[i_site],'_3hourly_columns.nc',sep = "")
path_file_col<-paste(path_model,models[i_mod],'/',file_name_col,sep = "")
# loading column data
file_nc_col<- nc_open(path_file_col)
var_mod <- ncvar_get(file_nc_col, varid=var_name)
var_mod <- var_mod + offset
var_mod <- var_mod *multipl_fact
if (i_mod == 6)
{var_mod <- var_mod[!is.na(var_mod[,1]),]}
# if (i_mod == 5 & var_name == "temp")
# {var_mod <- var_mod +273}
if (i_mod == 5 & var_name == "lwc")
{ var_mod<- pmax(var_mod,0)}
# {var_mod <- var_mod +273}
if (i_mod %in% 1:3 & var_name == "lwc")
{ var_mod<- var_mod*1000}
if (dim(var_mod)[1]>dim(var_mod)[2]) var_mod <- t(var_mod)
time1<-1:dim(var_mod)[2]
date_mod<-seq(lubridate::dmy_hms(start_time[i_site]),
lubridate::dmy_hms(end_time[i_site]),
3600*3)
if (length(date_mod)<length(time1)) {
var_mod<-var_mod[,- (1:(length(time1)-length(date_mod)))]
time1  <- time1[- (1:(length(time1)-length(date_mod)))]}
if (length(date_mod)>length(time1)) {
print(length(date_mod))
print(length(time1))
# print(date_mod[length(date_mod)])
time <- ncvar_get(file_nc_col, varid='time')
time<- time*3600*24 + as.POSIXct("1900-01-01")
# print(time[1])
# print(length(time))
# print(time[length(time)])
}
while (length(date_mod)>length(time1)) {
time1 <- append(time1, time1[length(time1)]+3600*3)
var_mod <- cbind(var_mod, var_mod[,length(time1)-1])}
# some filtering
# var_mod<-var_mod[apply(var_mod, 1, Compose(is.finite, all)),]
# rearranging in xyz array
ind_select<-seq(1,dim(var_mod)[2],max(1,floor(dim(var_mod)[2]/1000)))
time_select <- date_mod[ind_select]
var_mod<-var_mod[,ind_select]
var_mod_save<-var_mod
var_mod<-melt(var_mod)
df <- if (i_mod==1) {data.frame(var_mod)} else {cbind(df,var_mod$value)}
colnames(df)[2+i_mod] <- paste("val",toString(i_mod),sep = "")
}
df$X1<--df$X1
df$date <- time_select[df$X2]
print("Data loaded")
# === plotting ===
print("Plotting...")
pList <- lapply(1:length(models), function(i_mod){
p <- ggplot(data = df,
aes_string(x = "date", y = "X1", fill = paste("val",i_mod,sep=""))) +
geom_tile()+
scale_y_continuous(breaks=c(0,-50,-100,-150,-200),
labels=c("0", "5", "10","15","20"),
expand=c(0.02,0.01),
limits=if (var_name == "lwc") {c(-70, 0 )} else {c(-200,0)})+
scale_x_datetime(expand=c(0.02,0.01))+
scale_fill_gradientn(name=clab_text,
colours = if (var_name == "rho") {brewer.pal(length(models),"YlGnBu")}
else if (var_name == "temp")
{rev(brewer.pal(length(models),"RdBu"))}
else if (var_name == "lwc") {brewer.pal(length(models),"PuBu")},
limits = set_lim)+
annotate('text', x = df$date[floor(length(df$date)/2)],
y = if (var_name == "lwc") {-55} else {-180},
label = models[i_mod],fontface=2)+
theme(legend.position = if (i_mod==3) {c(1.05,0.9)} else {"none"},
legend.justification = c(0,1),
plot.margin=margin(0,10,10,0),
axis.title.x = element_blank(),
axis.text.x = if (i_mod %in% 7:9) {element_text(angle=90)} else {element_blank()},
axis.title.y = element_blank(),
axis.text.y = if (i_mod %in% c(1,4,7)) {element_text()} else {element_blank()},
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
})
p_final <- grid.arrange(grobs=pList, nrow=3,
top=sites[[i_site]],
left="Depth (m)",
bottom="Date",
right=" ",
vp=viewport(x=0, just="left", width=0.8, height=1),
heights=unit(c(3.2,3.2,3.9), c("cm","cm", "cm")))
print("Saving...")
ggsave(filename=paste0("Plots/",sites[[i_site]],"_",var_name,"_2D.jpg"),plot=p_final,device = "jpeg")
}
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 5,set_lim = c(315,900))
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 1, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 2, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 3, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 4, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 5, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 1,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 2,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 3,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 5,
multipl_fact=1, set_lim=c(0,5))
knitr::opts_chunk$set(echo = TRUE)
library(ncdf4)
library(ggplot2)
library(reshape)
library(functional)
library(pracma)
library(dplyr)
library(lubridate)
library(gridExtra)
library(grid)
library(viridis)
library(RColorBrewer)
path_model<-'C:/Users/bav/OneDrive - Geological survey of Denmark and Greenland/Data/RetMIP/Model outputs/'
sites<-list('KANU','Dye-2_long','Dye-2_16','Summit','FA')
models <- list('CFM-Cr','CFM-KM','DTU','DMIHH','GEUS','IMAUFDM','MeyerHewitt','UppsalaUniBucket','UppsalaUniDeepPerc')
start_time <- c("01-May-2012 00:00:00","01-Jun-1998 00:00:00","02-May-2016 00:00:00","02-Jul-2000 00:00:00","12-Apr-2014 00:00:00")
end_time <- c("31-Dec-2016 06:00:00","02-May-2015 15:00:00","28-Oct-2016 09:00:00","08-Mar-2015 12:00:00","02-Dec-2014 21:00:00")
knitr::opts_chunk$set(echo = TRUE)
library(ncdf4)
library(ggplot2)
library(reshape)
library(functional)
library(pracma)
library(dplyr)
library(lubridate)
library(gridExtra)
library(grid)
library(viridis)
library(RColorBrewer)
path_model<-'C:/Users/bav/OneDrive - Geological survey of Denmark and Greenland/Data/RetMIP/Model outputs/'
sites<-list('KANU','Dye-2_long','Dye-2_16','Summit','FA')
models <- list('CFM-Cr','CFM-KM','DTU','DMIHH','GEUS','IMAUFDM','MeyerHewitt','UppsalaUniBucket','UppsalaUniDeepPerc')
start_time <- c("01-May-2012 00:00:00","01-Jun-1998 00:00:00","02-May-2016 00:00:00","02-Jul-2000 00:00:00","12-Apr-2014 00:00:00")
end_time <- c("31-Dec-2016 06:00:00","02-May-2015 15:00:00","28-Oct-2016 09:00:00","08-Mar-2015 12:00:00","02-Dec-2014 21:00:00")
multiplot <- function (models,var_name,clab_text,i_site,set_lim,offset,multipl_fact){
if(missing(offset)) {
offset<-0
}
if(missing(multipl_fact)) {
multipl_fact<-1
}
# === Loading data ===
for (i_mod in 1:9){
file_name_col <- paste('RetMIP_',models[i_mod],'_',sites[i_site],'_3hourly_columns.nc',sep = "")
path_file_col<-paste(path_model,models[i_mod],'/',file_name_col,sep = "")
# loading column data
file_nc_col<- nc_open(path_file_col)
var_mod <- ncvar_get(file_nc_col, varid=var_name)
var_mod <- var_mod + offset
var_mod <- var_mod *multipl_fact
if (i_mod == 6)
{var_mod <- var_mod[!is.na(var_mod[,1]),]}
# if (i_mod == 5 & var_name == "temp")
# {var_mod <- var_mod +273}
if (i_mod == 5 & var_name == "lwc")
{ var_mod<- pmax(var_mod,0)}
# {var_mod <- var_mod +273}
if (i_mod %in% 1:3 & var_name == "lwc")
{ var_mod<- var_mod*1000}
if (dim(var_mod)[1]>dim(var_mod)[2]) var_mod <- t(var_mod)
time1<-1:dim(var_mod)[2]
date_mod<-seq(lubridate::dmy_hms(start_time[i_site]),
lubridate::dmy_hms(end_time[i_site]),
3600*3)
if (length(date_mod)<length(time1)) {
var_mod<-var_mod[,- (1:(length(time1)-length(date_mod)))]
time1  <- time1[- (1:(length(time1)-length(date_mod)))]}
if (length(date_mod)>length(time1)) {
print(length(date_mod))
print(length(time1))
# print(date_mod[length(date_mod)])
time <- ncvar_get(file_nc_col, varid='time')
time<- time*3600*24 + as.POSIXct("1900-01-01")
# print(time[1])
# print(length(time))
# print(time[length(time)])
}
while (length(date_mod)>length(time1)) {
time1 <- append(time1, time1[length(time1)]+3600*3)
var_mod <- cbind(var_mod, var_mod[,length(time1)-1])}
# some filtering
# var_mod<-var_mod[apply(var_mod, 1, Compose(is.finite, all)),]
# rearranging in xyz array
ind_select<-seq(1,dim(var_mod)[2],max(1,floor(dim(var_mod)[2]/1000)))
time_select <- date_mod[ind_select]
var_mod<-var_mod[,ind_select]
var_mod_save<-var_mod
var_mod<-melt(var_mod)
df <- if (i_mod==1) {data.frame(var_mod)} else {cbind(df,var_mod$value)}
colnames(df)[2+i_mod] <- paste("val",toString(i_mod),sep = "")
}
df$X1<--df$X1
df$date <- time_select[df$X2]
print("Data loaded")
# === plotting ===
print("Plotting...")
pList <- lapply(1:length(models), function(i_mod){
p <- ggplot(data = df,
aes_string(x = "date", y = "X1", fill = paste("val",i_mod,sep=""))) +
geom_tile()+
scale_y_continuous(breaks=c(0,-50,-100,-150,-200),
labels=c("0", "5", "10","15","20"),
expand=c(0.02,0.01),
limits=if (var_name == "lwc") {c(-70, 0 )} else {c(-200,0)})+
scale_x_datetime(expand=c(0.02,0.01))+
scale_fill_gradientn(name=clab_text,
colours = if (var_name == "rho")
{brewer.pal(length(models),"YlGnBu")}
else if (var_name == "temp")
{rev(brewer.pal(length(models),"RdBu"))}
else if (var_name == "lwc")
{brewer.pal(length(models),"PuBu")},
limits = set_lim)+
annotate('text', x = df$date[floor(length(df$date)/2)],
y = if (var_name == "lwc") {-55} else {-180},
label = models[i_mod],fontface=2)+
theme(legend.position = if (i_mod==3) {c(1.05,0.9)} else {"none"},
legend.justification = c(0,1),
plot.margin=margin(0,10,10,0),
axis.title.x = element_blank(),
axis.text.x = if (i_mod %in% 7:9) {element_text(angle=90)} else {element_blank()},
axis.title.y = element_blank(),
axis.text.y = if (i_mod %in% c(1,4,7)) {element_text()} else {element_blank()},
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1))
})
p_final <- grid.arrange(grobs=pList, nrow=3,
top=sites[[i_site]],
left="Depth (m)",
bottom="Date",
right=" ",
vp=viewport(x=0, just="left", width=0.8, height=1),
heights=unit(c(3.2,3.2,3.9), c("cm","cm", "cm")))
print("Saving...")
ggsave(filename=paste0("Plots/",sites[[i_site]],"_",var_name,"_2D.jpg"),plot=p_final,device = "jpeg")
}
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 1,set_lim = c(315,900))
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 2,set_lim = c(315,900))
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 3,set_lim = c(315,900))
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 4,set_lim = c(315,900))
multiplot(models,var_name="rho",clab_text='Density (kg m-3)',i_site = 5,set_lim = c(315,900))
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 1, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 2, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 3, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 4, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="temp",clab_text='Temperature (deg C)',i_site = 5, set_lim=c(-40,0),offset=-273)
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 1,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 2,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 3,
multipl_fact=1, set_lim=c(0,5))
multiplot(models,var_name="lwc",clab_text='Liquid water content (mm w.eq.)',i_site = 5,
multipl_fact=1, set_lim=c(0,5))
